# requests_handler.py

import requests
from requests.exceptions import SSLError
import logging

# Basic configuration for logging
logging.basicConfig(filename='error_log.txt', level=logging.ERROR,
                    format='%(asctime)s:%(levelname)s:%(message)s')

def make_request(url, payload=None, verify_ssl=True):
    try:
        if payload:
            response = requests.get(url, params=payload, verify=verify_ssl)
        else:
            response = requests.get(url, verify=verify_ssl)
        return response, True
    except SSLError as ssl_error:
        logging.error(f"SSL Certificate Error encountered for {url}: {ssl_error}")
        print("SSL Certificate Error: The site's security certificate is not trusted.")
        choice = input("Proceed without SSL verification? (yes/no): ").lower()
        if choice == 'yes':
            print("Proceeding without SSL verification...")
            try:
                if payload:
                    response = requests.get(url, params=payload, verify=False)
                else:
                    response = requests.get(url, verify=False)
                return response, True
            except requests.RequestException as e:
                print("Error: Failed to make the request without SSL verification.")
                return None, False
        else:
            return None, False
    except requests.RequestException as e:
        print(f"Error: Failed to make the request. Details: {e}")
        return None, False